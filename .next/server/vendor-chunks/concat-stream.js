/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/concat-stream";
exports.ids = ["vendor-chunks/concat-stream"];
exports.modules = {

/***/ "(rsc)/./node_modules/concat-stream/index.js":
/*!*********************************************!*\
  !*** ./node_modules/concat-stream/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Writable = (__webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\").Writable)\nvar inherits = __webpack_require__(/*! inherits */ \"(rsc)/./node_modules/inherits/inherits.js\")\nvar bufferFrom = __webpack_require__(/*! buffer-from */ \"(rsc)/./node_modules/buffer-from/index.js\")\n\nif (typeof Uint8Array === 'undefined') {\n  var U8 = (__webpack_require__(/*! typedarray */ \"(rsc)/./node_modules/typedarray/index.js\").Uint8Array)\n} else {\n  var U8 = Uint8Array\n}\n\nfunction ConcatStream(opts, cb) {\n  if (!(this instanceof ConcatStream)) return new ConcatStream(opts, cb)\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n  if (!opts) opts = {}\n\n  var encoding = opts.encoding\n  var shouldInferEncoding = false\n\n  if (!encoding) {\n    shouldInferEncoding = true\n  } else {\n    encoding =  String(encoding).toLowerCase()\n    if (encoding === 'u8' || encoding === 'uint8') {\n      encoding = 'uint8array'\n    }\n  }\n\n  Writable.call(this, { objectMode: true })\n\n  this.encoding = encoding\n  this.shouldInferEncoding = shouldInferEncoding\n\n  if (cb) this.on('finish', function () { cb(this.getBody()) })\n  this.body = []\n}\n\nmodule.exports = ConcatStream\ninherits(ConcatStream, Writable)\n\nConcatStream.prototype._write = function(chunk, enc, next) {\n  this.body.push(chunk)\n  next()\n}\n\nConcatStream.prototype.inferEncoding = function (buff) {\n  var firstBuffer = buff === undefined ? this.body[0] : buff;\n  if (Buffer.isBuffer(firstBuffer)) return 'buffer'\n  if (typeof Uint8Array !== 'undefined' && firstBuffer instanceof Uint8Array) return 'uint8array'\n  if (Array.isArray(firstBuffer)) return 'array'\n  if (typeof firstBuffer === 'string') return 'string'\n  if (Object.prototype.toString.call(firstBuffer) === \"[object Object]\") return 'object'\n  return 'buffer'\n}\n\nConcatStream.prototype.getBody = function () {\n  if (!this.encoding && this.body.length === 0) return []\n  if (this.shouldInferEncoding) this.encoding = this.inferEncoding()\n  if (this.encoding === 'array') return arrayConcat(this.body)\n  if (this.encoding === 'string') return stringConcat(this.body)\n  if (this.encoding === 'buffer') return bufferConcat(this.body)\n  if (this.encoding === 'uint8array') return u8Concat(this.body)\n  return this.body\n}\n\nvar isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]'\n}\n\nfunction isArrayish (arr) {\n  return /Array\\]$/.test(Object.prototype.toString.call(arr))\n}\n\nfunction isBufferish (p) {\n  return typeof p === 'string' || isArrayish(p) || (p && typeof p.subarray === 'function')\n}\n\nfunction stringConcat (parts) {\n  var strings = []\n  var needsToString = false\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (typeof p === 'string') {\n      strings.push(p)\n    } else if (Buffer.isBuffer(p)) {\n      strings.push(p)\n    } else if (isBufferish(p)) {\n      strings.push(bufferFrom(p))\n    } else {\n      strings.push(bufferFrom(String(p)))\n    }\n  }\n  if (Buffer.isBuffer(parts[0])) {\n    strings = Buffer.concat(strings)\n    strings = strings.toString('utf8')\n  } else {\n    strings = strings.join('')\n  }\n  return strings\n}\n\nfunction bufferConcat (parts) {\n  var bufs = []\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (Buffer.isBuffer(p)) {\n      bufs.push(p)\n    } else if (isBufferish(p)) {\n      bufs.push(bufferFrom(p))\n    } else {\n      bufs.push(bufferFrom(String(p)))\n    }\n  }\n  return Buffer.concat(bufs)\n}\n\nfunction arrayConcat (parts) {\n  var res = []\n  for (var i = 0; i < parts.length; i++) {\n    res.push.apply(res, parts[i])\n  }\n  return res\n}\n\nfunction u8Concat (parts) {\n  var len = 0\n  for (var i = 0; i < parts.length; i++) {\n    if (typeof parts[i] === 'string') {\n      parts[i] = bufferFrom(parts[i])\n    }\n    len += parts[i].length\n  }\n  var u8 = new U8(len)\n  for (var i = 0, offset = 0; i < parts.length; i++) {\n    var part = parts[i]\n    for (var j = 0; j < part.length; j++) {\n      u8[offset++] = part[j]\n    }\n  }\n  return u8\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29uY2F0LXN0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLHlHQUFtQztBQUNsRCxlQUFlLG1CQUFPLENBQUMsMkRBQVU7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsOERBQWE7O0FBRXRDO0FBQ0EsV0FBVyw4RkFBZ0M7QUFDM0MsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QixrQkFBa0I7O0FBRTFDO0FBQ0E7O0FBRUEsMENBQTBDLG9CQUFvQjtBQUM5RDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL211c2ljLXBsYXllci8uL25vZGVfbW9kdWxlcy9jb25jYXQtc3RyZWFtL2luZGV4LmpzP2QxZWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFdyaXRhYmxlID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJykuV3JpdGFibGVcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBidWZmZXJGcm9tID0gcmVxdWlyZSgnYnVmZmVyLWZyb20nKVxuXG5pZiAodHlwZW9mIFVpbnQ4QXJyYXkgPT09ICd1bmRlZmluZWQnKSB7XG4gIHZhciBVOCA9IHJlcXVpcmUoJ3R5cGVkYXJyYXknKS5VaW50OEFycmF5XG59IGVsc2Uge1xuICB2YXIgVTggPSBVaW50OEFycmF5XG59XG5cbmZ1bmN0aW9uIENvbmNhdFN0cmVhbShvcHRzLCBjYikge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQ29uY2F0U3RyZWFtKSkgcmV0dXJuIG5ldyBDb25jYXRTdHJlYW0ob3B0cywgY2IpXG5cbiAgaWYgKHR5cGVvZiBvcHRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSBvcHRzXG4gICAgb3B0cyA9IHt9XG4gIH1cbiAgaWYgKCFvcHRzKSBvcHRzID0ge31cblxuICB2YXIgZW5jb2RpbmcgPSBvcHRzLmVuY29kaW5nXG4gIHZhciBzaG91bGRJbmZlckVuY29kaW5nID0gZmFsc2VcblxuICBpZiAoIWVuY29kaW5nKSB7XG4gICAgc2hvdWxkSW5mZXJFbmNvZGluZyA9IHRydWVcbiAgfSBlbHNlIHtcbiAgICBlbmNvZGluZyA9ICBTdHJpbmcoZW5jb2RpbmcpLnRvTG93ZXJDYXNlKClcbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1OCcgfHwgZW5jb2RpbmcgPT09ICd1aW50OCcpIHtcbiAgICAgIGVuY29kaW5nID0gJ3VpbnQ4YXJyYXknXG4gICAgfVxuICB9XG5cbiAgV3JpdGFibGUuY2FsbCh0aGlzLCB7IG9iamVjdE1vZGU6IHRydWUgfSlcblxuICB0aGlzLmVuY29kaW5nID0gZW5jb2RpbmdcbiAgdGhpcy5zaG91bGRJbmZlckVuY29kaW5nID0gc2hvdWxkSW5mZXJFbmNvZGluZ1xuXG4gIGlmIChjYikgdGhpcy5vbignZmluaXNoJywgZnVuY3Rpb24gKCkgeyBjYih0aGlzLmdldEJvZHkoKSkgfSlcbiAgdGhpcy5ib2R5ID0gW11cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb25jYXRTdHJlYW1cbmluaGVyaXRzKENvbmNhdFN0cmVhbSwgV3JpdGFibGUpXG5cbkNvbmNhdFN0cmVhbS5wcm90b3R5cGUuX3dyaXRlID0gZnVuY3Rpb24oY2h1bmssIGVuYywgbmV4dCkge1xuICB0aGlzLmJvZHkucHVzaChjaHVuaylcbiAgbmV4dCgpXG59XG5cbkNvbmNhdFN0cmVhbS5wcm90b3R5cGUuaW5mZXJFbmNvZGluZyA9IGZ1bmN0aW9uIChidWZmKSB7XG4gIHZhciBmaXJzdEJ1ZmZlciA9IGJ1ZmYgPT09IHVuZGVmaW5lZCA/IHRoaXMuYm9keVswXSA6IGJ1ZmY7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoZmlyc3RCdWZmZXIpKSByZXR1cm4gJ2J1ZmZlcidcbiAgaWYgKHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyAmJiBmaXJzdEJ1ZmZlciBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHJldHVybiAndWludDhhcnJheSdcbiAgaWYgKEFycmF5LmlzQXJyYXkoZmlyc3RCdWZmZXIpKSByZXR1cm4gJ2FycmF5J1xuICBpZiAodHlwZW9mIGZpcnN0QnVmZmVyID09PSAnc3RyaW5nJykgcmV0dXJuICdzdHJpbmcnXG4gIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZmlyc3RCdWZmZXIpID09PSBcIltvYmplY3QgT2JqZWN0XVwiKSByZXR1cm4gJ29iamVjdCdcbiAgcmV0dXJuICdidWZmZXInXG59XG5cbkNvbmNhdFN0cmVhbS5wcm90b3R5cGUuZ2V0Qm9keSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCF0aGlzLmVuY29kaW5nICYmIHRoaXMuYm9keS5sZW5ndGggPT09IDApIHJldHVybiBbXVxuICBpZiAodGhpcy5zaG91bGRJbmZlckVuY29kaW5nKSB0aGlzLmVuY29kaW5nID0gdGhpcy5pbmZlckVuY29kaW5nKClcbiAgaWYgKHRoaXMuZW5jb2RpbmcgPT09ICdhcnJheScpIHJldHVybiBhcnJheUNvbmNhdCh0aGlzLmJvZHkpXG4gIGlmICh0aGlzLmVuY29kaW5nID09PSAnc3RyaW5nJykgcmV0dXJuIHN0cmluZ0NvbmNhdCh0aGlzLmJvZHkpXG4gIGlmICh0aGlzLmVuY29kaW5nID09PSAnYnVmZmVyJykgcmV0dXJuIGJ1ZmZlckNvbmNhdCh0aGlzLmJvZHkpXG4gIGlmICh0aGlzLmVuY29kaW5nID09PSAndWludDhhcnJheScpIHJldHVybiB1OENvbmNhdCh0aGlzLmJvZHkpXG4gIHJldHVybiB0aGlzLmJvZHlcbn1cblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSdcbn1cblxuZnVuY3Rpb24gaXNBcnJheWlzaCAoYXJyKSB7XG4gIHJldHVybiAvQXJyYXlcXF0kLy50ZXN0KE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpKVxufVxuXG5mdW5jdGlvbiBpc0J1ZmZlcmlzaCAocCkge1xuICByZXR1cm4gdHlwZW9mIHAgPT09ICdzdHJpbmcnIHx8IGlzQXJyYXlpc2gocCkgfHwgKHAgJiYgdHlwZW9mIHAuc3ViYXJyYXkgPT09ICdmdW5jdGlvbicpXG59XG5cbmZ1bmN0aW9uIHN0cmluZ0NvbmNhdCAocGFydHMpIHtcbiAgdmFyIHN0cmluZ3MgPSBbXVxuICB2YXIgbmVlZHNUb1N0cmluZyA9IGZhbHNlXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcCA9IHBhcnRzW2ldXG4gICAgaWYgKHR5cGVvZiBwID09PSAnc3RyaW5nJykge1xuICAgICAgc3RyaW5ncy5wdXNoKHApXG4gICAgfSBlbHNlIGlmIChCdWZmZXIuaXNCdWZmZXIocCkpIHtcbiAgICAgIHN0cmluZ3MucHVzaChwKVxuICAgIH0gZWxzZSBpZiAoaXNCdWZmZXJpc2gocCkpIHtcbiAgICAgIHN0cmluZ3MucHVzaChidWZmZXJGcm9tKHApKVxuICAgIH0gZWxzZSB7XG4gICAgICBzdHJpbmdzLnB1c2goYnVmZmVyRnJvbShTdHJpbmcocCkpKVxuICAgIH1cbiAgfVxuICBpZiAoQnVmZmVyLmlzQnVmZmVyKHBhcnRzWzBdKSkge1xuICAgIHN0cmluZ3MgPSBCdWZmZXIuY29uY2F0KHN0cmluZ3MpXG4gICAgc3RyaW5ncyA9IHN0cmluZ3MudG9TdHJpbmcoJ3V0ZjgnKVxuICB9IGVsc2Uge1xuICAgIHN0cmluZ3MgPSBzdHJpbmdzLmpvaW4oJycpXG4gIH1cbiAgcmV0dXJuIHN0cmluZ3Ncbn1cblxuZnVuY3Rpb24gYnVmZmVyQ29uY2F0IChwYXJ0cykge1xuICB2YXIgYnVmcyA9IFtdXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcCA9IHBhcnRzW2ldXG4gICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihwKSkge1xuICAgICAgYnVmcy5wdXNoKHApXG4gICAgfSBlbHNlIGlmIChpc0J1ZmZlcmlzaChwKSkge1xuICAgICAgYnVmcy5wdXNoKGJ1ZmZlckZyb20ocCkpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1ZnMucHVzaChidWZmZXJGcm9tKFN0cmluZyhwKSkpXG4gICAgfVxuICB9XG4gIHJldHVybiBCdWZmZXIuY29uY2F0KGJ1ZnMpXG59XG5cbmZ1bmN0aW9uIGFycmF5Q29uY2F0IChwYXJ0cykge1xuICB2YXIgcmVzID0gW11cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgIHJlcy5wdXNoLmFwcGx5KHJlcywgcGFydHNbaV0pXG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG5mdW5jdGlvbiB1OENvbmNhdCAocGFydHMpIHtcbiAgdmFyIGxlbiA9IDBcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgcGFydHNbaV0gPT09ICdzdHJpbmcnKSB7XG4gICAgICBwYXJ0c1tpXSA9IGJ1ZmZlckZyb20ocGFydHNbaV0pXG4gICAgfVxuICAgIGxlbiArPSBwYXJ0c1tpXS5sZW5ndGhcbiAgfVxuICB2YXIgdTggPSBuZXcgVTgobGVuKVxuICBmb3IgKHZhciBpID0gMCwgb2Zmc2V0ID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHBhcnQgPSBwYXJ0c1tpXVxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgcGFydC5sZW5ndGg7IGorKykge1xuICAgICAgdThbb2Zmc2V0KytdID0gcGFydFtqXVxuICAgIH1cbiAgfVxuICByZXR1cm4gdThcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/concat-stream/index.js\n");

/***/ })

};
;